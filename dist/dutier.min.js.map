{"version":3,"file":"dutier.min.js","sources":["../src/providers.js","../src/updateState.js","../src/applyReducer.js","../src/applyHandler.js","../src/unsubscribe.js","../src/createStore.js","../src/dispatch.js","../src/getState.js","../src/combine.js","../src/subscribe.js"],"sourcesContent":["\nexport const Provider = {\n  _reducers: {},\n  _handlers: [],\n  _updateState: function(){}\n}","export default ( state ) => {\n  return ( function( state ) {\n    var state = Object.assign({}, state)\n    return current => {\n      state = Object.assign({}, state, current)\n      return state\n    }\n  }(state))\n}","import { Provider } from './providers'\n\nexport default (action) => {\n  const currentState = Provider._updateState({})\n  Object.keys(Provider._reducers)\n    .forEach(reducer => {\n      const value = Provider._reducers[reducer].call(null, currentState, action)\n      if (JSON.stringify(value) !== JSON.stringify(currentState)) {\n        return Provider._updateState(value)\n      }\n    })\n  return { type: action.type,  state: Provider._updateState({}) }\n}\n","import { Provider } from './providers'\n\nexport default ({ type, state }) => {\n  Provider._handlers.forEach(handler => {\n    if (handler !== undefined && typeof handler === 'function') {\n      handler({ type, state})\n    }\n  })\n  return { type, state}\n}\n","import { Provider } from './providers'\n\n/**\n   * @name unsubscribe\n   * @description Unsubscribes from listening to a component\n   * @param {Function} handler The handler function\n   **/\n  export default ( handler ) => {\n    Provider._handlers.forEach( ( fn, index ) => {\n      if ( fn === handler) {\n        Provider._handlers.splice(index, 1)\n      }\n    })\n  }","import { Provider } from './providers'\nimport create from './updateState'\n /**\n  * @name createStore\n  * @description Sets the application data state\n  * @param {Object} data Simple Object that contain the State\n  */\n  export default ( state, ...reducers ) => {\n    reducers.forEach( ( reducer, index ) => Provider._reducers[index] = reducer )\n    Provider._updateState = create(state)\n  }","import applyReducer from './applyReducer'\nimport applyHandler from './applyHandler'\n/**\n   * @name dispatch\n   * @description Dispatch an action to change\n   * the store state\n   * @param { Object } payload The action payload\n   */  \n  export default  ( payload ) => {\n    return Promise.resolve(payload)\n        .then(applyReducer)\n        .then(applyHandler)\n  }","import {Provider} from './providers'\n\n/**\n * @name getState\n * @return {Object} a copy of the state\n */\nexport default () => {\n  return Provider._updateState({})\n}\n","import {Provider} from './providers'\n\n/**\n * @name combine\n * @description Combine the reducers\n */  \nexport default ( ...reducers ) => {\n  let len =  Object.keys(Provider._reducers).length\n  reducers.forEach( reducer => { Provider._reducers[len + 1] = reducer; len++ })\n}","import { Provider } from './providers'\nimport unsubscribe from './unsubscribe'\n\n/**\n   * @name subscribe\n   * @description Subscribe to call the handler function when the action will be triggered\n   * @param {Function} handler The function that will be called\n   **/\nexport default (handler) => {\n  Provider._handlers.push(handler)\n  return () => {\n    unsubscribe(handler)\n  }\n}\n"],"names":["Provider","state","Object","assign","current","action","currentState","_updateState","keys","_reducers","forEach","value","reducer","call","JSON","stringify","type","_handlers","undefined","handler","fn","index","splice","reducers","create","payload","Promise","resolve","then","applyReducer","applyHandler","len","length","push"],"mappings":"mMACO,IAAMA,0CAGG,yBCJCC,UACN,SAAUA,OACbA,EAAQC,OAAOC,UAAWF,UACvB,qBACGC,OAAOC,UAAWF,EAAOG,KAGnCH,eCLYI,OACRC,EAAeN,EAASO,+BACvBC,KAAKR,EAASS,WAClBC,QAAQ,gBACDC,EAAQX,EAASS,UAAUG,GAASC,KAAK,KAAMP,EAAcD,MAC/DS,KAAKC,UAAUJ,KAAWG,KAAKC,UAAUT,UACpCN,EAASO,aAAaI,MAG1BK,KAAMX,EAAOW,KAAOf,MAAOD,EAASO,qCCT7BS,IAAAA,KAAMf,IAAAA,eACbgB,UAAUP,QAAQ,iBACTQ,IAAZC,GAA4C,mBAAZA,MACxBH,OAAMf,aAGXe,OAAMf,qBCDEkB,KACNF,UAAUP,QAAS,SAAEU,EAAIC,GAC3BD,IAAOD,KACDF,UAAUK,OAAOD,EAAO,6BCHtBpB,8BAAUsB,qDAChBb,QAAS,SAAEE,EAASS,UAAWrB,EAASS,UAAUY,GAAST,MAC3DL,aAAeiB,EAAOvB,wBCDfwB,UACTC,QAAQC,QAAQF,GAClBG,KAAKC,GACLD,KAAKE,iCCJL9B,EAASO,kECDEgB,6CACdQ,EAAO7B,OAAOM,KAAKR,EAASS,WAAWuB,SAClCtB,QAAS,cAAsBD,UAAUsB,EAAM,GAAKnB,EAASmB,4BCAxDZ,YACLF,UAAUgB,KAAKd,GACjB,aACOA"}