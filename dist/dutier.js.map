{"version":3,"file":"dutier.js","sources":["../src/providers.js","../src/updateState.js","../src/createStore.js","../src/applyReducer.js","../src/applyHandler.js","../src/dispatch.js","../src/getState.js","../src/combine.js","../src/unsubscribe.js","../src/subscribe.js"],"sourcesContent":["\nexport const Provider = {\n  _reducers: {},\n  _handlers: [],\n  _updateState: function(){}\n}","export default ( state ) => {\n  return ( function( state ) {\n    var state = Object.assign({}, state)\n    return current => {\n      state = Object.assign({}, state, current)\n      return state\n    }\n  }(state))\n}","import { Provider } from './providers'\nimport create from './updateState'\n /**\n  * @name createStore\n  * @description Sets the application data state\n  * @param {Object} data Simple Object that contain the State\n  */\n  export default ( state, ...reducers ) => {\n    reducers.forEach( ( reducer, index ) => Provider._reducers[index] = reducer )\n    Provider._updateState = create(state)\n  }","import { Provider } from './providers'\n\nexport default (action) => {\n  const currentState = Provider._updateState({})\n  Object.keys(Provider._reducers)\n    .forEach(reducer => {\n      const value = Provider._reducers[reducer].call(null, currentState, action)\n      if (JSON.stringify(value) !== JSON.stringify(currentState)) {\n        return Provider._updateState(value)\n      }\n    })\n  return { type: action.type,  state: Provider._updateState({}) }\n}\n","import { Provider } from './providers'\n\nexport default ({ type, state }) => {\n  Provider._handlers.forEach(handler => {\n    if (handler !== undefined && typeof handler === 'function') {\n      handler({ type, state})\n    }\n  })\n  return { type, state}\n}\n","import applyReducer from './applyReducer'\nimport applyHandler from './applyHandler'\n/**\n   * @name dispatch\n   * @description Dispatch an action to change\n   * the store state\n   * @param { Object } payload The action payload\n   */  \n  export default  ( payload ) => {\n    return Promise.resolve(payload)\n        .then(applyReducer)\n        .then(applyHandler)\n  }","import {Provider} from './providers'\n\n/**\n * @name getState\n * @return {Object} a copy of the state\n */\nexport default () => {\n  return Provider._updateState({})\n}\n","import {Provider} from './providers'\n\n/**\n * @name combine\n * @description Combine the reducers\n */  \nexport default ( ...reducers ) => {\n  let len =  Object.keys(Provider._reducers).length\n  reducers.forEach( reducer => { Provider._reducers[len + 1] = reducer; len++ })\n}","import { Provider } from './providers'\n\n/**\n   * @name unsubscribe\n   * @description Unsubscribes from listening to a component\n   * @param {Function} handler The handler function\n   **/\n  export default ( handler ) => {\n    Provider._handlers.forEach( ( fn, index ) => {\n      if ( fn === handler) {\n        Provider._handlers.splice(index, 1)\n      }\n    })\n  }","import { Provider } from './providers'\nimport unsubscribe from './unsubscribe'\n\n/**\n   * @name subscribe\n   * @description Subscribe to call the handler function when the action will be triggered\n   * @param {Function} handler The function that will be called\n   **/\nexport default (handler) => {\n  Provider._handlers.push(handler)\n  return () => {\n    unsubscribe(handler)\n  }\n}\n"],"names":["Provider","state","Object","assign","current","reducers","forEach","reducer","index","_reducers","_updateState","create","action","currentState","keys","value","call","JSON","stringify","type","_handlers","handler","undefined","payload","Promise","resolve","then","applyReducer","applyHandler","len","length","fn","splice","push"],"mappings":";;;;;;;;;;;;AACO,IAAMA,WAAW;aACX,EADW;aAEX,EAFW;gBAGR,wBAAU;CAHnB;;ACDP,cAAe,UAAEC,KAAF,EAAa;SACjB,UAAUA,KAAV,EAAkB;QACrBA,QAAQC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,CAAZ;WACO,mBAAW;cACRC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyBG,OAAzB,CAAR;aACOH,KAAP;KAFF;GAFO,CAMPA,KANO,CAAT;CADF;;ACEC;;;;;AAKC,mBAAe,UAAEA,KAAF,EAA0B;oCAAdI,QAAc;YAAA;;;WAC9BC,OAAT,CAAkB,UAAEC,OAAF,EAAWC,KAAX;WAAsBR,SAASS,SAAT,CAAmBD,KAAnB,IAA4BD,OAAlD;GAAlB;WACSG,YAAT,GAAwBC,OAAOV,KAAP,CAAxB;CAFF;;ACLF,oBAAe,UAACW,MAAD,EAAY;MACnBC,eAAeb,SAASU,YAAT,CAAsB,EAAtB,CAArB;SACOI,IAAP,CAAYd,SAASS,SAArB,EACGH,OADH,CACW,mBAAW;QACZS,QAAQf,SAASS,SAAT,CAAmBF,OAAnB,EAA4BS,IAA5B,CAAiC,IAAjC,EAAuCH,YAAvC,EAAqDD,MAArD,CAAd;QACIK,KAAKC,SAAL,CAAeH,KAAf,MAA0BE,KAAKC,SAAL,CAAeL,YAAf,CAA9B,EAA4D;aACnDb,SAASU,YAAT,CAAsBK,KAAtB,CAAP;;GAJN;SAOO,EAAEI,MAAMP,OAAOO,IAAf,EAAsBlB,OAAOD,SAASU,YAAT,CAAsB,EAAtB,CAA7B,EAAP;CATF;;ACAA,oBAAe,gBAAqB;MAAlBS,IAAkB,QAAlBA,IAAkB;MAAZlB,KAAY,QAAZA,KAAY;;WACzBmB,SAAT,CAAmBd,OAAnB,CAA2B,mBAAW;QAChCe,YAAYC,SAAZ,IAAyB,OAAOD,OAAP,KAAmB,UAAhD,EAA4D;cAClD,EAAEF,UAAF,EAAQlB,YAAR,EAAR;;GAFJ;SAKO,EAAEkB,UAAF,EAAQlB,YAAR,EAAP;CANF;;ACAA;;;;;;AAME,gBAAgB,UAAEsB,OAAF,EAAe;UACtBC,QAAQC,OAAR,CAAgBF,OAAhB,EACFG,IADE,CACGC,YADH,EAEFD,IAFE,CAEGE,YAFH,CAAP;CADF;;ACNF;;;;AAIA,gBAAe,YAAM;SACZ5B,SAASU,YAAT,CAAsB,EAAtB,CAAP;CADF;;ACJA;;;;AAIA,eAAe,YAAmB;oCAAdL,QAAc;YAAA;;;MAC5BwB,MAAO3B,OAAOY,IAAP,CAAYd,SAASS,SAArB,EAAgCqB,MAA3C;WACSxB,OAAT,CAAkB,mBAAW;aAAWG,SAAT,CAAmBoB,MAAM,CAAzB,IAA8BtB,OAA9B,CAAuCsB;GAAtE;CAFF;;ACJA;;;;;AAKE,mBAAe,UAAER,OAAF,EAAe;WACnBD,SAAT,CAAmBd,OAAnB,CAA4B,UAAEyB,EAAF,EAAMvB,KAAN,EAAiB;QACtCuB,OAAOV,OAAZ,EAAqB;eACVD,SAAT,CAAmBY,MAAnB,CAA0BxB,KAA1B,EAAiC,CAAjC;;GAFJ;CADF;;ACJF;;;;;AAKA,iBAAe,UAACa,OAAD,EAAa;WACjBD,SAAT,CAAmBa,IAAnB,CAAwBZ,OAAxB;SACO,YAAM;gBACCA,OAAZ;GADF;CAFF;;;;;;;;;;"}