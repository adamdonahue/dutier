{"version":3,"sources":["../src/dutier.js"],"names":["root","factory","define","amd","exports","module","dispatch","getState","createStore","subscribe","combine","Dutier","global","_store","state","_state","handlers","reducer","unsubscribe","handler","components","forEach","fn","index","splice","applyReducer","action","reducers","initialState","Object","assign","actualState","keys","value","call","JSON","stringify","type","updateComponent","undefined","push","Promise","resolve","then","i","len","length"],"mappings":"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","file":"dutier.js","sourcesContent":[";(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory)\n  } else if (typeof exports === 'object') {\n    module.exports = {\n      dispatch: factory.dispatch,\n      getState: factory.getState,\n      createStore: factory.createStore,\n      subscribe: factory.subscribe,\n      combine: factory.combine,\n    }\n  } else {\n    root.Dutier = factory\n  }\n}(this, function (global) {\n  /**\n   * @name Dutier\n   * @description The object that will manage all application state\n   */\n  let Dutier = {\n    /**\n     * @name _store\n     * @description The private store\n     */\n    _store: {\n      /**\n       * @name state\n       * @description The initial store application state\n       */\n      state: {},\n      /**\n       * @name _state\n       * @description The new application state\n       * based on reducers values\n       */\n      _state: {},\n      /**\n       * @name handlers\n       * @description The subscribe handlers function\n       */\n      handlers: [],\n      /**\n       * @name reducer\n       * @description The reducer function\n       */ \n      reducer: {}\n    }\n  }\n  /**\n   * @name unsubscribe\n   * @description Unsubscribes from listening to a component\n   * @param {Component} component The Component\n   **/\n  function unsubscribe(handler){\n    const components = Dutier._store.handlers\n    components.forEach( ( fn, index ) => {\n      if ( fn === handler) {\n        components.splice(index, 1)\n      }\n    })\n  }\n  // Apply the reducers function\n  function applyReducer ( action ) {\n    const reducers = Dutier._store.reducer\n    const initialState = Object.assign({}, Dutier._store.state)\n    const actualState = Object.assign(initialState, Dutier._store._state)\n    \n    Object.keys(reducers)\n      .forEach( reducer => {\n        const value = reducers[reducer].call(null, actualState, action)\n        if ( JSON.stringify(value) !== JSON.stringify(actualState) ) {\n          Object.assign(Dutier._store._state, initialState, value)\n          return\n        }\n      })\n      \n    return Object.assign({}, { type: action.type } , { state: Object.assign({}, Dutier._store._state) })\n  }\n  \n  // update the component\n  function updateComponent ( { type } ) {\n    const state = Object.assign({}, Dutier._store._state)\n    Dutier._store.handlers.forEach( handler => {\n      if (handler !== undefined && typeof handler === 'function') {\n        handler({ type, state })\n      }\n    })\n    return { type, state }\n  }\n  return {\n    /**\n     * @name subscribe\n     * @description Subscribe to call the handler function when the action will be triggered\n     * @param {Component} component The Component\n     * @param {Function} handler The function that will be called\n     **/\n    subscribe: ( handler ) => {\n      Dutier._store\n        .handlers\n        .push(handler)\n      return () => {\n        unsubscribe(handler)\n      }\n    },\n    /**\n     * @name dispatch\n     * @description Dispatch an action to change\n     * the store state\n     * @param { string } action The action name\n     */\n    dispatch: (action) => {\n      return Promise\n        .resolve(action)\n        .then(applyReducer)\n        .then(updateComponent)\n    },\n    /**\n     * @name createStore\n     * @description Sets the application data state\n     * @param {object} data Simple Object that contain the State\n     */\n    createStore: ( state, ...reducers ) => {\n      // register reducers\n      reducers.forEach( (reducer, i ) => Dutier._store.reducer[ i ] = reducer);\n      // setting the immutable initial state return Dutier.store\n      Object.assign(Dutier._store.state, state)\n    },\n    /**\n     * @name combine\n     * @description Combine the reducers\n     */\n    combine: ( ...reducers ) => {\n      const len =  Object.keys(Dutier._store.reducer).length\n      reducers.forEach( reducer => Dutier._store.reducer[len + 1] = reducer)\n    },\n    /**\n     * @name getState\n     * @return {Object} a copy of the state\n     */\n    getState: () => {\n      return Object.assign({}, Dutier._store.state, Dutier._store._state)\n    }\n  }\n}(this)))"]}